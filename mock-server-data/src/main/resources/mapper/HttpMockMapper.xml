<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.shaikuba.mock.data.mybatis.mapper.HttpMockMapper">

    <resultMap id="MockRequestMap"
               type="cn.shaikuba.mock.data.entity.HttpMockRequest">
        <id column="id" property="id"/>
        <result column="title" property="title"/>
        <result column="tags" property="tags"/>
        <result column="request_url" property="requestUrl"/>
        <result column="query_string" property="queryString"/>
        <result column="request_method" property="requestMethod"/>
        <result column="form_data" property="formData"/>
        <result column="content_type" property="contentType" jdbcType="VARCHAR"/>
        <result column="request_body" property="requestBody"/>
        <result column="request_headers" property="requestHeaders"/>
        <result column="response_headers" property="responseHeaders"/>
        <result column="response_body" property="responseBody" jdbcType="LONGVARCHAR"/>
        <result column="status_code" property="statusCode"/>
        <result column="description" property="description"/>
        <result column="status" property="status" jdbcType="VARCHAR" javaType="String"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>

    <sql id="MOCK_REQUEST">
        mock_request
	</sql>

    <sql id="MOCK_REQUEST_COLUMNS">
        `title`, `tags`
        , `request_url`, `query_string`,  `request_method`, `form_data`, `content_type`, `request_body`, `request_headers`
        , `response_headers`, `response_body`, `status_code`
        , `description`, `status`
        , `create_time`, `update_time`
    </sql>

    <insert id="save" parameterType="HttpMockRequest" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        INSERT INTO
        <include refid="MOCK_REQUEST"/>
        (<include refid="MOCK_REQUEST_COLUMNS"/>)
        VALUES
        (#{title}, #{tags}, #{requestUrl}, #{queryString}, #{requestMethod}, #{formData}, #{contentType}, #{requestBody},
        #{requestHeaders}, #{responseHeaders}, #{responseBody}, #{statusCode}, #{description}, 'a', NOW(), NOW())
    </insert>

    <update id="update">
        UPDATE
        <include refid="MOCK_REQUEST"/>
        <set>
            <if test="title != null and title != ''">
                title=#{title},
            </if>
            <if test="tags != null and tags != ''">
                tags=#{tags},
            </if>
            <if test="queryString != null and queryString != ''">
                query_string=#{queryString},
            </if>
            <if test="formData != null and formData != ''">
                form_data=#{formData},
            </if>
            <if test="contentType != null and contentType != ''">
                content_type=#{contentType},
            </if>
            <if test="requestBody != null and requestBody != ''">
                request_body=#{requestBody},
            </if>
            <if test="requestHeaders != null and requestHeaders != ''">
                request_headers=#{requestHeaders},
            </if>
            <if test="responseHeaders != null and responseHeaders != ''">
                response_headers=#{responseHeaders},
            </if>
            <if test="responseBody != null and responseBody != ''">
                response_body=#{responseBody},
            </if>
            <if test="statusCode != null and statusCode != ''">
                status_code=#{statusCode},
            </if>
            <if test="description != null and description != ''">
                description=#{description},
            </if>
            <if test="status != null and status != ''">
                status=#{status},
            </if>
            update_time=NOW()
        </set>
        <where>
            <choose>
                <when test="id != null and id != 0">
                    id = #{id}
                </when>
                <otherwise>
                    <if test="requestUrl != null and requestUrl != ''">
                        request_url=#{requestUrl}
                    </if>
                    <if test="requestMethod != null and requestMethod != ''">
                        AND request_method=#{requestMethod}
                    </if>
                </otherwise>
            </choose>
        </where>
    </update>

    <select id="findOne" resultMap="MockRequestMap" parameterType="HttpMockRequest">
        SELECT * FROM
        <include refid="MOCK_REQUEST"/>
        <where>
            <if test="id != null and id != ''">
                id = #{id}
            </if>
            <if test="requestMethod != null and requestMethod != ''">
                AND request_method=#{requestMethod}
            </if>
            <if test="requestUrl != null and requestUrl != ''">
                AND request_url=#{requestUrl}
            </if>
        </where>
    </select>

    <select id="findAllByUrlAndMethod" resultMap="MockRequestMap" parameterType="HttpMockRequest">
        SELECT * FROM
        <include refid="MOCK_REQUEST"/>
        <where>
            status='a'
            <if test="requestMethod != null and requestMethod != ''">
                AND request_method=#{requestMethod}
            </if>
            <if test="requestUrl != null and requestUrl != ''">
                AND request_url=#{requestUrl}
            </if>
        </where>
    </select>

    <select id="findAll" resultMap="MockRequestMap" parameterType="Criteria">
        SELECT * FROM
        <include refid="MOCK_REQUEST"/>
        <where>
            <if test="criteria.requestMethod != null and criteria.requestMethod != ''">
                request_method=#{criteria.requestMethod}
            </if>
            <if test="criteria.requestUrl != null and criteria.requestUrl != ''">
                AND (
                request_url like concat('%', #{criteria.requestUrl}, '%')
                OR title like concat('%', #{criteria.requestUrl}, '%')
                OR tags like concat('%', #{criteria.requestUrl}, '%')
                )
            </if>

        </where>
        <if test="sort != null">
            ORDER BY ${sort.sortBy} ${sort.direction}
        </if>
        <choose>
            <when test="page != null">
                LIMIT ${page.pageNumber * page.pageSize}, ${page.pageSize}
            </when>
            <otherwise>
                LIMIT 0, 10
            </otherwise>
        </choose>
    </select>

    <select id="countByCriteria" parameterType="Criteria" resultType="int">
        SELECT COUNT(ID) AS count
        FROM
        <include refid="MOCK_REQUEST"/>
        <where>
            <if test="criteria.requestMethod != null and criteria.requestMethod != ''">
                request_method=#{criteria.requestMethod}
            </if>
            <if test="criteria.requestUrl != null and criteria.requestUrl != ''">
                AND (
                request_url like concat('%', #{criteria.requestUrl}, '%')
                OR title like concat('%', #{criteria.requestUrl}, '%')
                )
            </if>
        </where>
    </select>

    <delete id="delete" parameterType="list">
        DELETE FROM
        <include refid="MOCK_REQUEST"/>
        <where>
            <if test="list != null and list.size != 0">
                id IN
                <foreach item="item" index="index" collection="list"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </where>
    </delete>

</mapper>